<?xml version = "1.0" encoding = "UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<!-- =================================================
     This is a the Struts 2 configuration for the Bedework
     user calendar client.
     ================================================= -->

<!--
  The action-mappings below are divided into "normal" actions (suffixed
  with ".do") and render actions (suffixed with ".rdo"). All normal actions
  (which are typically used to change the application's state) redirect
  to a render action that returns a jsp page for display. Render actions
  do not change state.

  The action-mappings are grouped together by function.
  The division between normal and render actions is required, among other
  things, to allow Bedework to run in a portal.
  By convention, most render actions are named "show[Name]".

  Note that nearly all global forwards map to a render action that produce
  a jsp page for display.

  All action URLs used in any client are produced in header.jsp to take
  advantage of appropriate encoding or extensions required by the container
  and/or portal.  These "urlPrefixes" are then pulled into the xslt
  for use in constructing links into the application.  Look at the top of
  header.jsp and the default.xsl files within any client for examples.  Use
  the url-prefix variables in the xslt rather than calling these paths directly.

  Struts allows the specification of an action parameter.  We use this to
  pass a semicolon separated string of key/value pairs to the action classes.

  Each action is marked with its action type, and optionally a refresh time
  and/or refresh action, for example

  parameter="actionType=render;refinterval=900;conversation=end"

  Valid parameter keywords and values:
  refinterval    integer refresh seconds
  refaction      action result for refresh
  actionType     action, render or resource
  conversation   start    - start of a multi-request conversation
                 continue - part-way through a multi-request conversation
                 end - end of a multi-request conversation
                 only - if a conversation is already started on entry, end it
                   with no processing of changes.
                   Start a new conversation which we will end on exit.
                 processAndOnly - if a conversation is already started on entry,
                   process changes and end it.
                   start a new conversation which we will end on exit.
  auth           yes/no does this action require authentication

  In the absence of a conversation parameter we assume that a conversation
  starts with actionType=action and ends with actionType=render.

  Conversations are related to the persistance framework and allow us to keep
  a persistance engine session running until the sequence of actions is
  completed.

  What we don't see here are the urls generated to bridge the gaps in the
  conversations. For example, we fetch an event and display it to the user.

  The conversation does not end at this point - when the user submits the
  updates we continue and if some invalid input is discovered we may
  re-present the form. The conversation would end after a successful update.

  -->

<struts>
  <constant name="struts.devMode" value="${env.org_bedework_struts_devMode:false}" />
  <constant name="struts.multipart.maxSize" value="1000000" />
  <constant name="struts.enable.SlashesInActionNames" value="true"/>
  <constant name="struts.action.extension" value="do,gdo,rdo" />
  <constant name="struts.parameters.requireAnnotations" value="false" />
  <constant name="struts.allowlist.packageNames"
            value="org.bedework.webcommon,org.bedework.calfacade" />

  <package name="bedeworkSetup" namespace="/"
           extends="struts-default">
    <action    name="setup"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="listEvents" type="redirect">/main/showEventList.rdo</result>
    </action>

    <!-- =================================================
                              Monitor
         ================================================= -->

    <action    name="monitor"
               class="org.bedework.webcommon.monitor.MonitorAction">
      <param name="actionType">resource</param>
    </action>
  </package>

  <package name="bedeworkMain" namespace="/main"
           extends="struts-default">
    <!-- global redirects used by many actions -->
    <global-results>
      <!-- render forwards -->
      <result name="initialise">/main/initialise.rdo</result>
      <result name="showEditEvent">/event/showEditEvent.rdo</result>
      <result name="eventMore">/event/showEventMore.rdo</result>

      <!-- result for a new session from some bookmarked link; used by
           org.bedework.webcommon.RenderAction when a refresh is needed -->
      <result name="gotomain">/main/showMain.rdo</result>

      <!-- set up state and get going. -->
      <result name="initial">/setup.do</result>

      <!-- global redirects used by many actions -->
      <result name="error" type="redirect">/main/showMain.rdo</result>

      <result name="noAction" type="redirect">/main/showMain.rdo</result>

      <result name="cancelled" type="redirect">/main/showMain.rdo</result>

      <result name="noAccess" type="redirect">/main/showMain.rdo</result>

      <result name="notFound" type="redirect">/main/showMain.rdo</result>

      <result name="loggedOut">/login/logout.html</result>
    </global-results>

    <!-- ========== Action Mapping Definitions ============ -->

    <!-- =================================================
                            Fundamental Actions
```      ================================================= -->
    
    <action    name="initialise"
               class="org.bedework.webcommon.RenderMainAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>

      <result name="success">/docs/main.jsp</result>
    </action>


    <action    name="processShowMain"
               class="org.bedework.webcommon.RenderMainAction">
      <param name="actionType">render</param>
      <param name="conversation">processAndOnly</param>

      <result name="success">/docs/main.jsp</result>
    </action>

    <action    name="showMain"
               class="org.bedework.webcommon.RenderMainAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>

      <result name="success">/docs/main.jsp</result>
    </action>

    <action    name="showMainEnd"
               class="org.bedework.webcommon.RenderMainAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>

      <result name="success">/docs/main.jsp</result>
    </action>
    
    <action    name="reload"
               class="org.bedework.webcommon.misc.ReloadAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>

    <!-- .................................................
             Switch to a subscription, calendar or view
         ................................................. -->

    <action    name="setSelection"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="listEvents" type="redirect">/main/showMain.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="noViewDef" type="redirect">/main/showMain.rdo</result>
    </action>

    <action    name="setSelectionList"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="listEvents" type="redirect">/main/showEventList.rdo</result>
      <result name="success" type="redirect">/main/showEventList.rdo</result>
      <result name="noViewDef" type="redirect">/main/showEventList.rdo</result>
    </action>

    <!-- ...................................................
             Actions for ongoing
         ................................................... -->

    <action    name="setOngoingList"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>
      <param name="mdl">ongoing</param>

      <result name="listEvents" type="redirect">/main/showOngoingList.rdo</result>
      <result name="success" type="redirect">/main/showOngoingList.rdo</result>
      <result name="noViewDef" type="redirect">/main/showOngoingList.rdo</result>
      <result name="error" type="redirect">/main/showOngoingList.rdo</result>
      <result name="noAction" type="redirect">/main/showOngoingList.rdo</result>
      <result name="cancelled" type="redirect">/main/showOngoingList.rdo</result>
      <result name="noAccess" type="redirect">/main/showOngoingList.rdo</result>
      <result name="notFound" type="redirect">/main/showOngoingList.rdo</result>
    </action>

    <action    name="showOngoingList"
               class="org.bedework.webcommon.search.RenderSearchResultAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>
      <param name="mdl">ongoing</param>
      <param name="refaction">/main/showOngoingList.rdo</param>

      <result name="success">/docs/event/eventList.jsp</result>
      <result name="error">/docs/asyncError.jsp</result>
      <result name="noAction">/docs/asyncError.jsp</result>
      <result name="cancelled">/docs/asyncError.jsp</result>
      <result name="noAccess">/docs/asyncError.jsp</result>
      <result name="notFound">/docs/asyncError.jsp</result>
    </action>

    <!-- ....................................................
         Actions for mainEventList
     ........................................................ -->

    <action    name="setMainEventList"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>
      <param name="mdl">mainEventList</param>

      <result name="listEvents" type="redirect">/main/showMainEventList.rdo</result>
      <result name="success" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noViewDef" type="redirect">/main/showMainEventList.rdo</result>
      <result name="error" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noAction" type="redirect">/main/showMainEventList.rdo</result>
      <result name="cancelled" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noAccess" type="redirect">/main/showMainEventList.rdo</result>
      <result name="notFound" type="redirect">/main/showMainEventList.rdo</result>
    </action>

    <action    name="nextMainEventList"
               class="org.bedework.webcommon.search.SearchNextAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>
      <param name="mdl">mainEventList</param>

      <result name="success" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noViewDef" type="redirect">/main/showMainEventList.rdo</result>
      <result name="error" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noAction" type="redirect">/main/showMainEventList.rdo</result>
      <result name="cancelled" type="redirect">/main/showMainEventList.rdo</result>
      <result name="noAccess" type="redirect">/main/showMainEventList.rdo</result>
      <result name="notFound" type="redirect">/main/showMainEventList.rdo</result>
    </action>

    <action    name="showMainEventList"
               class="org.bedework.webcommon.search.RenderSearchResultAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>
      <param name="mdl">mainEventList</param>
      <param name="refaction">/main/showMainEventList.rdo</param>

      <result name="success">/docs/event/eventList.jsp</result>
      <result name="error">/docs/asyncError.jsp</result>
      <result name="noAction">/docs/asyncError.jsp</result>
      <result name="cancelled">/docs/asyncError.jsp</result>
      <result name="noAccess">/docs/asyncError.jsp</result>
      <result name="notFound">/docs/asyncError.jsp</result>
    </action>

    <!-- ...................................................
             Display an event
         ................................................... -->

    <action    name="setViewPeriod"
               class="org.bedework.webcommon.misc.GoToAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/main/showMainEnd.rdo</result>
    </action>

    <!-- ...................................................
           Display a list of events
       ..................................................... -->

    <action    name="listEvents"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="listEvents" type="redirect">/main/showEventList.rdo</result>
      <result name="success" type="redirect">/main/showEventList.rdo</result>
    </action>

    <action    name="showEventList"
               class="org.bedework.webcommon.search.RenderSearchResultAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>
      <param name="refaction">/main/showMainEventList.rdo</param>

      <result name="success">/docs/event/eventList.jsp</result>
    </action>
  </package>

    <!-- =================================================
                              Events
         ================================================= -->

  <package name="bedeworkEvents" namespace="/event"
           extends="struts-default">
    <!-- ..................................................
             Display an event
         .................................................. -->

    <action    name="eventView"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/event/showEventMore.rdo</result>
    </action>

    <action    name="showEventMore"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>

      <result name="success">/docs/event/eventMore.jsp</result>
    </action>

    <!-- ...................................................
             Edit an event
             delete result only if we have a "delete" request parameter
         .................................................. -->

    <action    name="editEvent"
               class="org.bedework.client.web.rw.event.FetchEventAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="continue" type="redirect">/event/showEditEvent.rdo</result>
      <result name="copy" type="redirect">/event/showEditEvent.rdo</result>
    </action>

    <action    name="showEditEvent"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>
      <param name="refinterval">900</param>

      <result name="success">/docs/event/editEvent.jsp</result>
    </action>

    <action    name="updateEvent"
               class="org.bedework.client.web.rw.event.UpdateEventAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="validationError" type="redirect">/main/showMain.rdo</result>
      <result name="retry" type="redirect">/event/showEditEvent.rdo</result>
      <result name="duplicate" type="redirect">/event/showEditEvent.rdo</result>
      <result name="continue" type="redirect">/event/showEditEvent.rdo</result>
      <result name="delete" type="redirect">/event/showDeleteConfirm.rdo</result>
      <result name="copy" type="redirect">/event/showAddEvent.rdo</result>
      <result name="editEventAttendees" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="makeEventIntoMeeting" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="eventDatesInited" type="redirect">/event/showEditEvent.rdo</result>
    </action>
    <!-- No longer?
           <result name="updateEventAccess" type="redirect">/event/showEditEvent.rdo</result> 
     -->

    <!-- ..................................................
             Modify an event
         .................................................. -->

    <action    name="gotoEditEvent"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/event/showEditEvent.rdo</result>
    </action>

    <!-- ...................................................
             Add an event
         ................................................... -->

    <action    name="initEvent"
               class="org.bedework.client.web.rw.event.InitAddEventAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/event/showAddEvent.rdo</result>
      <result name="validationError" type="redirect">/event/showAddEvent.rdo</result>
    </action>

    <action    name="showAddEvent"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>
      <param name="refinterval">900</param>

      <result name="success">/docs/event/addEvent.jsp</result>
    </action>

    <action    name="addEvent"
               class="org.bedework.client.web.rw.event.UpdateEventAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="noAction" type="redirect">/event/showAddEvent.rdo</result>
      <result name="error" type="redirect">/event/showAddEvent.rdo</result>
      <result name="validationError" type="redirect">/event/showAddEvent.rdo</result>
      <result name="retry" type="redirect">/event/showAddEvent.rdo</result>
      <result name="duplicate" type="redirect">/event/showAddEvent.rdo</result>
      <result name="continue" type="redirect">/event/showEditEvent.rdo</result>
      <result name="delete" type="redirect">/event/showDeleteConfirm.rdo</result>
      <result name="copy" type="redirect">/event/showModForm.rdo</result>
      <result name="editEventAttendees" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="updateEventAccess" type="redirect">/event/showAddEvent.rdo</result>
      <result name="makeEventIntoMeeting" type="redirect">/event/showAttendeesForEvent.rdo</result>
    </action>

    <!-- ...................................................
             Deleting an event (link on edit event page)
         .................................................... -->

    <action    name="delEvent"
               class="org.bedework.client.web.rw.event.DeleteEventAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>

    <!-- ..................................................
             Deleting an event (where from?)
         .................................................. -->

    <action    name="showDeleteConfirm"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/event/deleteConfirm.jsp</result>
    </action>

    <action    name="deleteConfirm"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/event/showDeleteConfirm.rdo</result>
    </action>

    <!-- ...................................................
         Adding Event References
         ................................................... -->

    <action    name="addEventRef"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/event/showAddEventRef.rdo</result>
    </action>

    <action    name="showAddEventRef"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/event/addEventRef.jsp</result>
    </action>

    <action    name="addEventRefComplete"
               class="org.bedework.client.web.rw.event.AddEventRefAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="eventNotFound" type="redirect">/main/showMain.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="duplicate" type="redirect">/main/showMain.rdo</result>
    </action>

    <!-- ....................................................
         Adding Event Subscriptions to a event list collection
         .................................................... -->

    <action    name="addEventSub"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/event/showAddEventSub.rdo</result>
    </action>

    <action    name="showAddEventSub"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/event/addEventSub.jsp</result>
    </action>

    <action    name="addEventSubComplete"
               class="org.bedework.client.web.rw.event.AddEventSubAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="eventNotFound" type="redirect">/main/showMain.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="duplicate" type="redirect">/main/showMain.rdo</result>
    </action>

    <!-- =================================================
                          Scheduling meetings
         ================================================= -->

    <action    name="initMeeting"
               class="org.bedework.client.web.rw.event.InitAddEventAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/event/showAttendeesForEvent.rdo</result>
    </action>

    <!-- ..................................................
         Editing event attendees - from update, new meeting or make event into meeting
         ................................................... -->

    <!-- Update the attendee list and recalculate freebusy -->
    <action    name="attendeesForEvent"
               class="org.bedework.client.web.rw.event.AttendeeAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="badRequest" type="redirect">/main/showMain.rdo</result>
      <result name="error" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="noAction" type="redirect">/event/showAttendeesForEvent.rdo</result>
      <result name="listAttendees" type="redirect">/event/listAttendees.rdo</result>
    </action>

    <action    name="listAttendees"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>
      <param name="refinterval">900</param>

      <result name="success">/docs/event/attendeesList.jsp</result>
    </action>

    <action    name="showAttendeesForEvent"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>
      <param name="refinterval">900</param>

      <result name="success">/docs/schedule/attendees.jsp</result>
    </action>

    <!-- Exit with a link to update the current event from the freebusy -->

    <!-- Get the freebusy for a list of attendees -->
    <action    name="requestFreeBusy"
               class="org.bedework.client.web.rw.schedule.RequestFreeBusy">
      <param name="actionType">resource</param>
      <param name="conversation">continue</param>
    </action>

    <!-- ...................................................
         Delete from the inbox
         ................................................... -->

    <action    name="delInboxEvent"
               class="org.bedework.client.web.rw.event.DeleteEventAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>

      <result name="success" type="redirect">/schedule/showInbox.rdo</result>
    </action>
  </package>

  <package name="bedeworkSchedule" namespace="/schedule"
           extends="struts-default">
    <!-- ...................................................
         Show the inbox
         ................................................... -->

    <action    name="showInbox"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>

      <result name="success">/docs/schedule/inbox.jsp</result>
    </action>

    <action    name="clearReply"
               class="org.bedework.client.web.rw.event.DeleteEventAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>

    <!-- .................................................
         Fetch and display a reply in the inbox - first two unused?
         ................................................. -->

    <action    name="initAttendeeReply"
               class="org.bedework.client.web.rw.schedule.ProcessInboxEvent">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="noAction" type="redirect">/schedule/showInbox.rdo</result>
      <result name="noMeeting" type="redirect">/schedule/showMeeting.rdo</result>
      <result name="continue" type="redirect">/schedule/showMeeting.rdo</result>
    </action>

    <action    name="showMeeting"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/event/eventMore.jsp</result>
    </action>

    <!-- XXX Conversation may not work if we result to edit -->
    <action    name="processAttendeeReply"
               class="org.bedework.client.web.rw.schedule.AttendeeReply">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/schedule/showInbox.rdo</result>
      <result name="duplicate" type="redirect">/schedule/showInbox.rdo</result>
      <result name="declined" type="redirect">/schedule/showInbox.rdo</result>
      <result name="edit" type="redirect">/event/showEditEvent.rdo</result>
    </action>

    <!-- ...................................................
         Attendee responding to an event
         ................................................... -->

    <action    name="initAttendeeRespond"
               class="org.bedework.client.web.rw.schedule.ProcessInboxEvent">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="noAction" type="redirect">/schedule/showInbox.rdo</result>
      <result name="noMeeting" type="redirect">/schedule/showMeeting.rdo</result>
      <result name="continue" type="redirect">/schedule/showMeeting.rdo</result>
    </action>

    <action    name="showAttendeeRespond"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>
      <param name="refinterval">900</param>

      <result name="success">/docs/schedule/attendeeRespond.jsp</result>
    </action>

    <action    name="initAttendeeUpdate"
               class="org.bedework.client.web.rw.schedule.ProcessInboxEvent">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="continue" type="redirect">/schedule/showAttendeeRespond.rdo</result>
      <result name="success" type="redirect">/schedule/showAttendeeRespond.rdo</result>
    </action>

    <action    name="changeStatus"
               class="org.bedework.client.web.rw.schedule.AttendeeRespond">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="continue" type="redirect">/schedule/showAttendeeRespond.rdo</result>
      <result name="success" type="redirect">/schedule/showAttendeeRespond.rdo</result>
    </action>

    <!-- Conversation may not work if we get a validation error -->
    <action    name="attendeeRespond"
               class="org.bedework.client.web.rw.schedule.AttendeeRespond">
      <param name="actionType">action</param>
      <param name="conversation">end</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="validationError" type="redirect">/schedule/showAttendeeRespond.rdo</result>
      <result name="duplicate" type="redirect">/schedule/showInbox.rdo</result>
    </action>

    <!-- ..................................................
         Attendee asking for a refresh - option when editing event.
         .................................................. -->

    <action    name="refresh"
               class="org.bedework.client.web.rw.schedule.AttendeeRespond">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="success" type="redirect">/event/showEventMore.rdo</result>
      <result name="validationError" type="redirect">/event/showEventMore.rdo</result>
    </action>
  </package>

    <!-- =================================================
                          Export (download) and Import
         ================================================= -->

  <package name="bedeworkMisc" namespace="/misc"
           extends="struts-default">
    <action    name="export"
               class="org.bedework.webcommon.misc.ExportAction">
      <param name="actionType">resource</param>
      <param name="conversation">only</param>
    </action>

    <action    name="initUpload"
               class="org.bedework.client.web.rw.misc.InitUploadAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>

      <result name="success">/docs/upload.jsp</result>
    </action>

    <!--  Action called by the upload form -->
    <action    name="upload"
               class="org.bedework.client.web.rw.misc.UploadAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
      <result name="baddata" type="redirect">/main/showMain.rdo</result>
      <result name="retry" type="redirect">/misc/initUpload.rdo</result>
    </action>

    <!-- =================================================
                   Aynchronous calls and generic pages
         ================================================= -->

    <!-- an action for setting values into the form asynchronously -->
    <action    name="async"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>
      <param name="mdl">async</param>

      <result name="success">/docs/async.jsp</result>
      <result name="error">/docs/asyncError.jsp</result>
      <result name="noAction">/docs/asyncError.jsp</result>
      <result name="cancelled">/docs/asyncError.jsp</result>
      <result name="noAccess">/docs/asyncError.jsp</result>
      <result name="notFound">/docs/asyncError.jsp</result>
    </action>

    <action    name="showPage"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">only</param>

      <result name="success">/docs/showPage.jsp</result>
    </action>
  </package>

  <!-- =================================================
                           Category Actions
       ================================================= -->

  <package name="bedeworkCats" namespace="/categories"
           extends="struts-default">
    <!-- ...............................................
             Display categories page
         ............................................... -->

    <action    name="initUpdate"
               class="org.bedework.webcommon.category.FetchCategoriesAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/category/showUpdateList.rdo</result>
    </action>

    <action    name="showUpdateList"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>

      <result name="success">/docs/category/categoryList.jsp</result>
    </action>

    <!-- ...................................................
             Add a category
         ................................................... -->

    <action    name="initAdd"
               class="org.bedework.client.web.rw.category.InitAddCategoryAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="continue" type="redirect">/category/showModForm.rdo</result>
    </action>

    <action    name="showModForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/category/modCategory.jsp</result>
    </action>

    <action    name="update"
               class="org.bedework.client.web.rw.category.UpdateCategoryAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="cancelled" type="redirect">/category/showUpdateList.rdo</result>
      <result name="continue" type="redirect">/category/showUpdateList.rdo</result>
      <result name="retry" type="redirect">/category/showModForm.rdo</result>
      <result name="delete" type="redirect">/category/showDeleteConfirm.rdo</result>
    </action>

    <action    name="showDeleteConfirm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">continue</param>

      <result name="success">/docs/category/deleteConfirm.jsp</result>
    </action>

    <action    name="delete"
               class="org.bedework.client.web.rw.category.DeleteCategoryAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="inUse" type="redirect">/category/showReferenced.rdo</result>
      <result name="cancelled" type="redirect">/category/showUpdateList.rdo</result>
      <result name="notFound" type="redirect">/category/showUpdateList.rdo</result>
      <result name="continue" type="redirect">/category/showUpdateList.rdo</result>
    </action>

    <action    name="showReferenced"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>

      <result name="success">/docs/category/referenced.jsp</result>
    </action>

    <!-- ...................................................
             Modify a category
         ................................................... -->

    <action    name="fetchForUpdate"
               class="org.bedework.client.web.rw.category.FetchCategoryAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/category/showModForm.rdo</result>
    </action>
  </package>

  <!-- =================================================
                              Locations
       ================================================= -->

    <!-- ........... PERSONAL client only ...... -->

  <package name="bedeworkLocs" namespace="/location"
           extends="struts-default">
    <action    name="showUpdateList"
               class="org.bedework.client.web.rw.location.FetchEditableAction">
      <param name="actionType">render</param>

      <result name="success">/docs/location/locationList.jsp</result>
    </action>

    <action    name="showModForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/location/modLocation.jsp</result>
    </action>

    <action    name="showDeleteConfirm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/location/deleteConfirm.jsp</result>
    </action>

    <action    name="initAdd"
               class="org.bedework.client.web.rw.location.InitAddLocationAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/location/showModForm.rdo</result>
    </action>

    <action    name="initUpdate">
      <result type="redirect">/location/showUpdateList.rdo</result>
    </action>

    <action    name="fetchForUpdate"
               class="org.bedework.client.web.rw.location.FetchLocationAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/location/showModForm.rdo</result>
    </action>

    <action    name="update"
               class="org.bedework.client.web.rw.location.UpdateLocationAction">
      <param name="actionType">action</param>

      <result name="cancelled" type="redirect">/location/showUpdateList.rdo</result>
      <result name="success" type="redirect">/location/showUpdateList.rdo</result>
      <result name="retry" type="redirect">/location/showModForm.rdo</result>
      <result name="delete" type="redirect">/location/showDeleteConfirm.rdo</result>
    </action>

    <action    name="delete"
               class="org.bedework.client.web.rw.location.DeleteLocationAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/location/showUpdateList.rdo</result>
      <result name="noAccess" type="redirect">/location/showUpdateList.rdo</result>
      <result name="referenced" type="redirect">/location/showUpdateList.rdo</result>
      <result name="notFound" type="redirect">/location/showUpdateList.rdo</result>
      <result name="cancelled" type="redirect">/location/showUpdateList.rdo</result>
    </action>

    <!-- Must be a gdo action - returns json -->
    <action    name="all"
               class="org.bedework.webcommon.location.FetchLocationsAction">
      <param name="actionType">resource</param>
      <param name="conversation">only</param>
      <param name="mdl">locations</param>
    </action>
  </package>

    <!-- =================================================
                              Free / Busy
     ================================================= -->

  <package name="bedeworkFreeBusy" namespace="/freeBusy"
           extends="struts-default">
    <action    name="showFreeBusy"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/freeBusy.jsp</result>
    </action>

    <action    name="fbsvc"
               class="org.bedework.client.web.rw.schedule.FreeBusyPublishAction">
      <param name="actionType">resource</param>
    </action>

    <action    name="getFreeBusy"
               class="org.bedework.client.web.rw.schedule.FreeBusyAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/freeBusy/showFreeBusy.rdo</result>
      <result name="noAccess" type="redirect">/freeBusy/showFreeBusy.rdo</result>
      <result name="notFound" type="redirect">/freeBusy/showFreeBusy.rdo</result>
    </action>
  </package>

  <!-- =================================================
                             Calendar Actions
       ================================================= -->

  <package name="bedeworkCalendars" namespace="/calendar"
           extends="struts-default">
    <action    name="publish"
               class="org.bedework.webcommon.misc.WebCalendarAction">
      <param name="actionType">resource</param>
    </action>

    <action    name="showPublicCals"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/calendarList.jsp</result>
    </action>

    <action    name="fetchPublicCalendars"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/calendar/showPublicCals.rdo</result>
    </action>

    <action    name="showCals"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/emitCalendars.jsp</result>
    </action>

    <action    name="fetchCalendars"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/calendar/showCals.rdo</result>
    </action>

    <action    name="showCalendarForExport"
               class="org.bedework.webcommon.calendars.RenderCalendarAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/displayCalendarForExport.jsp</result>
    </action>

    <action    name="fetchForExport"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>

      <result name="success">/calendar/showCalendarForExport.rdo</result>
    </action>

    <action    name="showCalendar"
               class="org.bedework.webcommon.calendars.RenderCalendarAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/displayCalendar.jsp</result>
    </action>

    <action    name="fetchForDisplay"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/calendar/showCalendar.rdo</result>
    </action>

    <!-- === Adding and Modifying Calendars === -->

    <action    name="showModForm"
               class="org.bedework.webcommon.calendars.RenderCalendarAction">
      <param name="actionType">render</param>

      <result name="notFound" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="success">/docs/calendar/modCalendar.jsp</result>
    </action>

    <action    name="initAdd"
               class="org.bedework.client.web.rw.calendars.InitAddCalendarAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/calendar/showAddForm.rdo</result>
    </action>

    <action    name="showAddForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/modCalendar.jsp</result>
    </action>

    <action    name="showUpdateList"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/calendarList.jsp</result>
    </action>

    <action    name="fetchForUpdate"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/calendar/showModForm.rdo</result>
    </action>

    <action    name="update"
               class="org.bedework.client.web.rw.calendars.UpdateCalendarAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="cancelled" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="retry" type="redirect">/calendar/showModForm.rdo</result>
      <result name="notAdded" type="redirect">/calendar/showAddForm.rdo</result>
      <result name="delete" type="redirect">/calendar/showDeleteConfirm.rdo</result>
    </action>

    <action    name="setPropsInGrid"
               class="org.bedework.client.web.rw.calendars.PatchCalendarAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/main/showMain.rdo</result>
    </action>

    <action    name="setPropsInList"
               class="org.bedework.client.web.rw.calendars.PatchCalendarAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/main/showEventList.rdo</result>
    </action>

    <!-- === deleting calendars === -->

    <action    name="showDeleteConfirm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="cancelled" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="success">/docs/calendar/deleteConfirm.jsp</result>
    </action>

    <action    name="showReferenced"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/referenced.jsp</result>
    </action>

    <action    name="delete"
               class="org.bedework.client.web.rw.calendars.DeleteCalendarAction">
      <param name="actionType">action</param>

      <result name="inUse" type="redirect">/calendar/showReferenced.rdo</result>
      <result name="notFound" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="cancelled" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="continue" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="reffed" type="redirect">/calendar/showUpdateList.rdo</result>
    </action>

    <action    name="listForExport"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/calendarListForExport.jsp</result>
    </action>

    <!-- === display a page of descriptions for public calendars (not currently used) === -->

    <action    name="showDescriptionList"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/calendarDescriptions.jsp</result>
    </action>
  </package>

  <!-- =================================================
                           Sharing
       ================================================= -->

  <package name="bedeworkSharing" namespace="/sharing"
           extends="struts-default">
    <action    name="sharecol"
               class="org.bedework.client.web.rw.sharing.ShareCollectionAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/calendar/showModForm.rdo</result>
    </action>

    <action    name="reply"
               class="org.bedework.client.web.rw.sharing.ShareReplyAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/main/showMain.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>

    <action    name="publish"
               class="org.bedework.client.web.rw.sharing.PublishCollectionAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/calendar/showModForm.rdo</result>
    </action>

    <action    name="subscribe"
               class="org.bedework.client.web.rw.sharing.SubscribeAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/calendar/showUpdateList.rdo</result>
      <result name="success" type="redirect">/calendar/showUpdateList.rdo</result>
    </action>

    <action    name="initAddSubscription"
               class="org.bedework.client.web.rw.calendars.InitAddCalendarAction">
      <param name="actionType">action</param>

      <result name="continue" type="redirect">/sharing/showAddSubForm.rdo</result>
    </action>

    <action    name="showAddSubForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/calendar/addSubscription.jsp</result>
    </action>
  </package>

  <!-- =================================================
                           Notifications
       ================================================= -->

  <package name="bedeworkNotify" namespace="/notify"
           extends="struts-default">
    <!-- The following two actions do the same thing, and differ only by their
         conversation= parameter. The first action is used when no
         transaction is running; the second is used in the middle of a transaction
         (e.g. a form is being filled). -->
    <action    name="remove"
               class="org.bedework.client.web.rw.notifications.RemoveAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="mdl">remove</param>

      <result name="notFound" type="redirect">/widget/ajaxTerminator.rdo</result>
      <result name="success" type="redirect">/widget/ajaxTerminator.rdo</result>
    </action>

    <action    name="removeTrans"
               class="org.bedework.client.web.rw.notifications.RemoveAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>

      <result name="notFound" type="redirect">/widget/ajaxTerminator.rdo</result>
      <result name="success" type="redirect">/widget/ajaxTerminator.rdo</result>
    </action>

    <action    name="get"
               class="org.bedework.client.web.rw.notifications.GetNotificationsAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="mdl">notify</param>

      <result name="success" type="redirect">/notify/show.rdo</result>
    </action>

    <action    name="show"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/notifications/notifications.jsp</result>
    </action>

    <action    name="removeAll"
               class="org.bedework.client.web.rw.notifications.RemoveAllAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
    </action>

    <action    name="subscribe"
               class="org.bedework.client.web.rw.notifications.SubscribeAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="mdl">notify</param>
    </action>
  </package>

  <!-- =================================================
                                    VPOLL
       ================================================= -->

  <package name="bedeworkVpoll" namespace="/vpoll"
           extends="struts-default">
    <action    name="initManageVpoll"
               class="org.bedework.client.web.rw.schedule.ProcessInboxEvent">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="continue" type="redirect">/vpoll/managePolls.rdo</result>
      <result name="success" type="redirect">/vpoll/managePolls.rdo</result>
    </action>

    <action    name="managePolls"
               class="org.bedework.client.web.rw.schedule.VpollAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>
      <param name="refinterval">1500</param>

      <result name="success">/docs/vpoll/managePolls.jsp</result>
    </action>
  </package>

  <!-- =================================================
                            Views
       ================================================= -->

  <package name="bedeworkViews" namespace="/view"
           extends="struts-default">
    <action    name="addView"
               class="org.bedework.client.web.rw.views.AddViewAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>

    <action    name="removeView"
               class="org.bedework.client.web.rw.views.DeleteViewAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>
  </package>

  <!-- =================================================
         User Preferences (also see email and alarms)
       ================================================= -->

  <package name="bedeworkPrefs" namespace="/prefs"
           extends="struts-default">
    <action    name="showModForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/prefs/modPrefs.jsp</result>
    </action>

    <action    name="fetchForUpdate"
               class="org.bedework.client.web.rw.pref.FetchPrefsAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/prefs/showModForm.rdo</result>
    </action>

    <action    name="update"
               class="org.bedework.client.web.rw.pref.UpdatePrefsAction">
      <param name="actionType">action</param>

      <result name="cancelled" type="redirect">/main/showMain.rdo</result>
      <result name="retry" type="redirect">/prefs/showModForm.rdo"  redirect="true</result>
      <result name="notFound" type="redirect">/prefs/showModForm.rdo"  redirect="true</result>
      <result name="success" type="redirect">/prefs/showModForm.rdo</result>
    </action>

    <action    name="showSchedulingModForm"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>

      <result name="success">/docs/prefs/modSchedulingPrefs.jsp</result>
    </action>

    <!-- the following needs to call a different action to display the
         inbox access information  -->
    <action    name="fetchSchedulingForUpdate"
               class="org.bedework.client.web.rw.pref.FetchPrefsAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/prefs/showSchedulingModForm.rdo</result>
    </action>

    <action    name="updateSchedulingPrefs"
               class="org.bedework.client.web.rw.pref.UpdatePrefsAction">
      <param name="actionType">action</param>

      <result name="cancelled" type="redirect">/main/showMain.rdo</result>
      <result name="retry" type="redirect">/prefs/showSchedulingModForm.rdo"  redirect="true</result>
      <result name="notFound" type="redirect">/prefs/showSchedulingModForm.rdo"  redirect="true</result>
      <result name="success" type="redirect">/prefs/showSchedulingModForm.rdo</result>
    </action>
  </package>

  <!-- =================================================
                         Mailing Events
       ================================================= -->

  <package name="bedeworkMail" namespace="/mail"
           extends="struts-default">
    <action    name="showEmailOptions"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>

      <result name="success">/docs/emailOptions.jsp</result>
    </action>

    <action    name="initMailEvent"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/email/showEmailOptions.rdo</result>
    </action>

    <action    name="mailEvent"
               class="org.bedework.client.web.rw.event.MailEventAction">
      <param name="actionType">action</param>

      <result name="noEvent" type="redirect">/main/showMain.rdo</result>
      <result name="retry" type="redirect">/email/showEmailOptions.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>
  </package>

  <!-- =================================================
                         Event Alarms
       ================================================= -->

  <package name="bedeworkAlarm" namespace="/alarm"
           extends="struts-default">
    <action    name="showAlarmOptions"
               class="org.bedework.webcommon.event.RenderEventAction">
      <param name="actionType">render</param>

      <result name="success">/docs/alarmOptions.jsp</result>
    </action>

    <action    name="initEventAlarm"
               class="org.bedework.webcommon.event.EventKeyAction">
      <param name="actionType">action</param>

      <result name="success" type="redirect">/alarm/showAlarmOptions.rdo</result>
    </action>

    <action    name="setAlarm"
               class="org.bedework.client.web.rw.event.SetAlarmAction">
      <param name="actionType">action</param>

      <result name="retry" type="redirect">/alarm/showAlarmOptions.rdo</result>
      <result name="success" type="redirect">/main/showMain.rdo</result>
    </action>
  </package>

  <!-- =================================================
                         Searching
       ================================================= -->

  <package name="bedeworkSearch" namespace="/search"
           extends="struts-default">
    <action    name="search"
               class="org.bedework.webcommon.search.SearchParamsAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="listEvents" type="redirect">/main/showResult.rdo</result>
      <result name="success" type="redirect">/search/showResult.rdo</result>
    </action>


    <action    name="showResult"
               class="org.bedework.webcommon.search.RenderSearchResultAction">
      <param name="actionType">render</param>
      <param name="conversation">end</param>

      <result name="success">/docs/search/list.jsp</result>
    </action>

    <action    name="next"
               class="org.bedework.webcommon.search.SearchNextAction">
      <param name="actionType">action</param>
      <param name="conversation">start</param>

      <result name="success" type="redirect">/search/showResult.rdo</result>
    </action>
  </package>

  <package name="bedeworkJson" namespace="/json"
           extends="struts-default">
    <action    name="categories"
               class="org.bedework.webcommon.category.FetchCategoriesAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="catlist">true</param>
    </action>
  </package>

  <!-- =================================================
       Widgets - simple pages that return XML snippets for use
       with ajax enabled forms
       ================================================= -->

  <package name="bedeworkWidget" namespace="/widget"
           extends="struts-default">
    <action    name="showCategories"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="mdl">showcats</param>

      <result name="success">/docs/widget/categories.jsp</result>
    </action>

    <action    name="categories"
               class="org.bedework.webcommon.NoopAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="mdl">showcats</param>

      <result name="success" type="redirect">/widget/showCategories.rdo</result>
      <result name="listEvents" type="redirect">/widget/showCategories.rdo</result>
    </action>

    <action    name="showGroups"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="mdl">showgroups</param>

      <result name="success">/docs/widget/groups.jsp</result>
    </action>

    <action    name="groups"
               class="org.bedework.webcommon.admingroup.FetchAGsAction">
      <param name="actionType">action</param>
      <param name="conversation">only</param>
      <param name="mdl">showgroups</param>

      <result name="success" type="redirect">/widget/showGroups.rdo</result>
      <result name="listEvents" type="redirect">/widget/showGroups.rdo</result>
    </action>

    <!-- Update the attendee list and recalculate freebusy -->
    <action    name="attendees"
               class="org.bedework.client.web.rw.event.AttendeeAction">
      <param name="actionType">action</param>
      <param name="conversation">continue</param>
      <param name="mdl">showatts</param>

      <result name="success" type="redirect">/widget/showAttendees.rdo</result>
      <result name="listAttendees" type="redirect">/widget/showAttendees.rdo</result>
    </action>

    <action    name="showAttendees"
               class="org.bedework.webcommon.RenderAction">
      <param name="actionType">render</param>
      <param name="mdl">showatts</param>

      <result name="success">/docs/widget/attendees.jsp</result>
    </action>
  </package>
</struts>
